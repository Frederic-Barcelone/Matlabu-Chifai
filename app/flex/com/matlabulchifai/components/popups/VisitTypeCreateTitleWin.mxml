<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" width="400" height="300"
	title="{languageArray['Create Visit Type']}"
	showCloseButton="true"
	creationComplete="init()"
    close="PopUpManager.removePopUp(this)">

	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.rpc.events.ResultEvent;
			import mx.core.Application;
			import mx.managers.PopUpManager;
			import mx.validators.Validator;
    		import mx.events.ValidationResultEvent;
    		import com.matlabulchifai.events.visit_type.VisitTypeEvent;
			
			[Bindable]
			public var languageArray:Object;
			[Bindable]
    		public var formIsValid:Boolean = false;
    		
    		private var focusedFormControl:DisplayObject;
			
			private function init():void{
				resetFocus();    
			}
			    
			private function validateForm(event:Event):void 
		    {                    
		          focusedFormControl = event.target as DisplayObject;                
		          formIsValid = true;            
		          validate(visitTypeValidator);
		     }
		
		    private function validate(validator:Validator):Boolean
		    {                
		         var validatorSource:DisplayObject = validator.source as DisplayObject;
		         var suppressEvents:Boolean = (validatorSource != focusedFormControl);
		         var event:ValidationResultEvent = validator.validate(null, suppressEvents); 
		         var currentControlIsValid:Boolean = (event.type == ValidationResultEvent.VALID);
		         formIsValid = formIsValid && currentControlIsValid;                 
		         return currentControlIsValid;
		    }

	    	
    		private function resetFocus():void
    		{
    	    	focusManager.setFocus(nameTI);
	    	}

			
			private function createVisitType():void{
				try{
					svcVisitTypeCreate.send();
					this.enabled = false;
				}
				catch(error:Error){
					Alert.show(languageArray["Could not contact server."], languageArray["Server Error"])
				}
			}
			
			private function handleVisitTypeCreateResult(event:ResultEvent):void{
				var result:Object = event.result;
				if(result == "error"){
					Alert.show("The account was not created.", "Error");
				}else{
					//Alert.show("The account was created successfully.", "Success");
					Application.application.svcVisitTypesList.send();
					this.enabled = true;
					PopUpManager.removePopUp(this);
				}
			}
			
		]]>
	</mx:Script>

	<mx:HTTPService id="svcVisitTypeCreate"
		url="/visit_types.xml?authenticity_token={Application.application.parameters.authenticityToken}"
		contentType="application/xml"
		resultFormat="e4x"
		method="POST"
		result="handleVisitTypeCreateResult(event)">
		<mx:request xmlns="">
			<visit_type>
				<name>{nameTI.text}</name>
				<notes>{notesTA.text}</notes>
			</visit_type>
		</mx:request>
	</mx:HTTPService>
	
	<mx:StringValidator 
        id="visitTypeValidator"
        source="{nameTI}" 
        property="text"
        minLength="2"
        requiredFieldError="{languageArray['This field is required.']}"
        tooShortError="{languageArray['This field is shorter than the minimum allowed length.']}"/>

	<mx:VBox>
		<mx:Form id="visitTypeCreateForm" textAlign="left" labelWidth="125">
			<mx:Label text="New Visit Type" fontWeight="bold" />	
			<mx:Spacer height="5" />
			<mx:FormItem required="true" label="{languageArray['Visit Type']}">
				<mx:TextInput id="nameTI" change="validateForm(event)"/>
			</mx:FormItem>
			
			<mx:Spacer height="5" />
			<mx:FormItem label="Visit Type Note">
				<mx:TextArea id="notesTA" width="150" height="100"/>
			</mx:FormItem>
			
			<mx:Spacer height="5" />
			<mx:FormItem >
				<mx:HBox>
					<mx:Button label="OK" id="OKBtn" click="createVisitType()" enabled="{formIsValid}"/>
					<mx:Button label="Cancel" id="CancelBtn" click="PopUpManager.removePopUp(this)" />
				</mx:HBox>
			</mx:FormItem>
		</mx:Form>
	</mx:VBox>
	
</mx:TitleWindow>