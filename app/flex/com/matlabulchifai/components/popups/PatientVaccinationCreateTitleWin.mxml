<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:hc="com.hillelcoren.components.*"
	xmlns:classes="com.hillelcoren.components.autoComplete.classes.*"  
	layout="vertical" 
	width="500" 
	height="450"
	title="{languageArray['Add New Vaccination']}"
	showCloseButton="true"
	creationComplete="init()"
    close="PopUpManager.removePopUp(this)">
	
	<mx:Metadata>
		[Event(name="patientVaccCreate", type="com.matlabulchifai.events.patient.PatientVaccinationEvent")]
	</mx:Metadata>
		
	<mx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.core.Application;
			import mx.collections.ArrayCollection;
			import com.matlabulchifai.events.patient.PatientVaccinationEvent;
			import com.matlabulchifai.events.vaccination.VaccinationEvent;
			import mx.controls.Alert;
			import mx.validators.Validator;
    		import mx.events.ValidationResultEvent;
			
			[Bindable]
			public var patient:XML;
			[Bindable]
			public var patientID:Number;
			[Bindable]
			public var languageArray:Object;
			[Bindable]
			public var vaccinationIdMap:Object;
			[Bindable]
			public var vaccinations:ArrayCollection;
			[Bindable]
			private var vaccinationSearchStr:String;
			private var vaccinationId:String;
			
			[Bindable]
    		public var formIsValid:Boolean = true;
    		
			private var focusedFormControl:DisplayObject;
			
			private function init():void {
				resetFocus();
				callLater(validateForm, [new Event("blank")]);
			}
			
			private function validateForm(event:Event):void 
    		{                    
        		focusedFormControl = event.target as DisplayObject;                
        	  	formIsValid = true;            
    	      	validate(vaccValidator);    	      	  
    	      	validate(vaccDateValidator);
	     	}

	    	private function validate(validator:Validator):Boolean
    		{                
        	 	var validatorSource:DisplayObject = validator.source as DisplayObject;
         		var suppressEvents:Boolean = (validatorSource != focusedFormControl);
         		var event:ValidationResultEvent = validator.validate(null, suppressEvents); 
         		var currentControlIsValid:Boolean = (event.type == ValidationResultEvent.VALID);
         		formIsValid = formIsValid && currentControlIsValid;                 
        		return currentControlIsValid;
    		}
    		
    		private function resetFocus():void
    		{
    	    	focusManager.setFocus(searchVaccinationTI);
	    	}					
			

			private function processVaccinationCreate():void {
				var vaccinationSelected:Object = searchVaccinationTI.selectedItem;
				
				if (vaccinationSelected != null) {
					//check to see if selected vaccination already exists
					if (vaccinationSelected.hasOwnProperty("id")) {
						vaccinationId = vaccinationSelected.id;
						vaccinationSearchStr = searchVaccinationTI.text;
						callPatientVaccinationCreate();
					} else {
						//if vaccination does not exits then create new vaccination 
						//and then create patient_vaccination
						vaccinationSearchStr = String(vaccinationSelected);						
						svcVaccinationCreate.send();
					}
				}
			}
			
			private function handleNewPatientVaccinationResult(event:ResultEvent):void{
				var resultXML:XML = XML(event.result);
				Matlabulchifai.debug("vaccination created = \n" + resultXML);
				dispatchEvent(new PatientVaccinationEvent(PatientVaccinationEvent.PATIENT_VACCINATION_CREATE, resultXML));
				PopUpManager.removePopUp(this);	
			}
			
			private function handleNewVaccinationResult(event:ResultEvent):void {
				var newVaccination:XML = XML(event.result);
				
				if (newVaccination != null) {
					//add new vaccination to vaccinationIdMap and vaccinations collection
					dispatchEvent(new VaccinationEvent(VaccinationEvent.VACCINATION_CREATE, newVaccination));
					
					vaccinationId = newVaccination.id;
					callPatientVaccinationCreate();
				}
			}
			
			private function callPatientVaccinationCreate():void {
				svcPatientVaccinationCreate.send();
				this.enabled = false;
			}

		]]>
	</mx:Script>
	
	<mx:HTTPService
		id="svcVaccinationCreate"
		url="/vaccinations.xml?authenticity_token={Application.application.parameters.authenticityToken}"
		resultFormat="e4x"
		contentType="application/xml"
		method="POST"
		result="handleNewVaccinationResult(event)">
		<mx:request>
			<vaccination>
				<name>{vaccinationSearchStr}</name>
				<notes></notes>
			</vaccination>
		</mx:request>
	</mx:HTTPService>
	
	<mx:HTTPService
		id="svcPatientVaccinationCreate"
		url="/patient_vaccinations.xml?authenticity_token={Application.application.parameters.authenticityToken}"
		resultFormat="e4x"
		contentType="application/xml"
		method="POST"
		result="handleNewPatientVaccinationResult(event)">
		<mx:request>
			<patient_vaccination>
				<name>{vaccinationSearchStr}</name>
				<date_admined>{vaccDateDF.text}</date_admined>
				<notes>{vaccNotesTA.text}</notes>
				<patient_id>{patientID}</patient_id>
			</patient_vaccination>
		</mx:request>
	</mx:HTTPService>
	
	
    
    <mx:DateValidator 
        id="vaccDateValidator"
        source="{vaccDateDF}" 
        property="text"        
    />
    
    <mx:StringValidator
    	id="vaccValidator"
    	source="{searchVaccinationTI}"
    	property="text"
    	required="true"
    	requiredFieldError="{languageArray['This field is required.']}"
        tooShortError="{languageArray['This field is shorter than the minimum allowed length.']}"/>
	
	
	<mx:VBox verticalAlign="middle" horizontalAlign="center" width="100%" height="85%">
		<mx:Form defaultButton="{OKBtn}" labelWidth="140">
			<mx:Label text="{patient['last_name']}, {patient['first_name']}" fontWeight="bold" />
			<mx:Spacer height="5" />
			<mx:FormItem label="{languageArray['Vaccination Name']}" required="true">
				<hc:AdvancedAutoComplete id="searchVaccinationTI" dataProvider="{vaccinations}" 
					labelField="name" selectedItemStyleName="facebook" matchType="anyPart" 
					showBrowseButton="true" browserFields="name" enableClearIcon="true" width="275" 
					allowNewValues="true" backspaceAction="remove" autoSelectEnabled="false"
				    searchChange="validateForm(event);" change="validateForm(event)"/>
			</mx:FormItem>
			<mx:Spacer height="5" />
			<mx:FormItem label="{languageArray['Date Administered']}" required="true">
				<mx:DateField id="vaccDateDF" yearNavigationEnabled="true" minYear="1980"
					creationComplete="vaccDateDF.selectedDate = new Date();" 
					change="validateForm(event);"/>
			</mx:FormItem>
			<mx:Spacer height="5" />
			<mx:FormItem label="{languageArray['Notes']}">
				<mx:TextArea id="vaccNotesTA" width="200" height="150" />
			</mx:FormItem>
		</mx:Form>
	</mx:VBox>
	
	
	<mx:HBox horizontalAlign="center" verticalAlign="middle" width="100%" height="15%">
		<mx:Button label="OK" id="OKBtn" click="processVaccinationCreate()" enabled="{formIsValid}"/>
		<mx:Button label="{languageArray['Cancel']}" id="CancelBtn" click="PopUpManager.removePopUp(this)" />
	</mx:HBox>
	
</mx:TitleWindow>
