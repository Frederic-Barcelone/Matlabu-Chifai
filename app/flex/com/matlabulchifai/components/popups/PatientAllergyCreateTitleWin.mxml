<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:hc="com.hillelcoren.components.*"
	xmlns:classes="com.hillelcoren.components.autoComplete.classes.*" 
	layout="vertical" 
	width="490" 
	height="530"
	title="{languageArray['Add New Allergy']}"
	showCloseButton="true"
	creationComplete="init()"
    close="PopUpManager.removePopUp(this)">
	
	<mx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.collections.ArrayCollection;
			import com.matlabulchifai.events.patient.PatientAllergyEvent;
			import com.matlabulchifai.events.allergy.AllergyEvent;
			import mx.core.Application;
			import mx.controls.Alert;
			import mx.validators.Validator;
    		import mx.events.ValidationResultEvent;
			
			[Bindable]
			public var patient:XML;
			[Bindable]
			public var patientID:Number;
			[Bindable]
			public var languageArray:Object;
			[Bindable]
			public var allergies:ArrayCollection;
			[Bindable]
			private var allergyNames:ArrayCollection;
			
			private var allergyId:String;	
			[Bindable]
			private var severities:ArrayCollection = new ArrayCollection(
            [ { label:"10", data:"10" }, { label:"9", data:"9" }, { label:"8", data:"8" }, { label:"7", data:"7" },
				{label:"6", data:"6" }, { label:"5", data:"5" }, { label:"4", data:"4" }, { label:"3", data:"3" },
				{label:"2", data:"2" }, { label:"1", data:"1" } ]);
			[Bindable]
			private var searchStr:String;
			
			[Bindable]
    		public var formIsValid:Boolean = false;
    		
			private var focusedFormControl:DisplayObject;
			
			private function init():void {
				//initAllergyNames();
				resetFocus();
			}
    
 			private function validateForm(event:Event):void 
    		{                    
        		focusedFormControl = event.target as DisplayObject;                
        	  	formIsValid = true;            
    	      	//validate(nameValidator);    	      	  
	     	}

	    	private function validate(validator:Validator):Boolean
    		{                
        	 	var validatorSource:DisplayObject = validator.source as DisplayObject;
         		var suppressEvents:Boolean = (validatorSource != focusedFormControl);         		
         		var event:ValidationResultEvent = validator.validate(null, suppressEvents); 
         		var currentControlIsValid:Boolean = (event.type == ValidationResultEvent.VALID);
         		formIsValid = formIsValid && currentControlIsValid;                 
        		return currentControlIsValid;
    		}
    		
    		private function resetFocus():void
    		{
    	    	focusManager.setFocus(searchAllergyTI);
	    	}		
			
			
			private function processPatientAllergyCreate():void {
				var allergySelected:Object = searchAllergyTI.selectedItem;
				if (allergySelected != null) {
					//check to see if selected allergy already exists
					if (allergySelected.hasOwnProperty("id")) {
						allergyId = allergySelected.id;
						searchStr = searchAllergyTI.text;
						callPatientAllergyCreate();
					} else {
						//if allergy does not exits then create new allergy 
						//and then create patient_allergy						
						searchStr = String(allergySelected);
						svcAllergyCreate.send();
					}
				}
			}		
			
			private function handleNewAllergyResult(event:ResultEvent):void {
				var newAllergy:XML = XML(event.result);
				
				if (newAllergy != null) {
					//add new allergy to allergyIdMap and allergies collection
					dispatchEvent(new AllergyEvent(AllergyEvent.ALLERGY_CREATE, newAllergy));
					allergyId = newAllergy.id;
					callPatientAllergyCreate();
				}
			}
			
			private function callPatientAllergyCreate():void {
				svcPatientAllergyCreate.send();
				this.enabled = false;
			}
			
			private function handleNewPatientAllergyResult(event:ResultEvent):void {
				var resultXML:XML = XML(event.result);
				Matlabulchifai.debug("allergy created = \n" + resultXML);
				dispatchEvent(new PatientAllergyEvent(PatientAllergyEvent.PATIENT_ALLERGY_CREATE, resultXML));
				PopUpManager.removePopUp(this);
			}
		]]>
	</mx:Script>
	
	<mx:HTTPService
		id="svcPatientAllergyCreate"
		url="/patient_allergies.xml?authenticity_token={Application.application.parameters.authenticityToken}"
		resultFormat="e4x"
		contentType="application/xml"
		method="POST"
		result="handleNewPatientAllergyResult(event)">
		<mx:request>
			<patient_allergy>
				<name>{searchStr}</name>
				<allergy_id>{allergyId}</allergy_id>
				<date_observed>{allergyDateDF.text}</date_observed>
				<severity>{severityCB.text}</severity>
				<reaction>{allergyReactionTI.text}</reaction>
				<notes>{allergyNotesTI.text}</notes>
				<patient_id>{patientID}</patient_id>
			</patient_allergy>
		</mx:request>
	</mx:HTTPService>
	
	<mx:HTTPService
		id="svcAllergyCreate"
		url="/allergies.xml?authenticity_token={Application.application.parameters.authenticityToken}"
		resultFormat="e4x"
		contentType="application/xml"
		method="POST"
		result="handleNewAllergyResult(event)">
		<mx:request>
			<allergy>
				<name>{searchStr}</name>
				<notes></notes>
			</allergy>
		</mx:request>
	</mx:HTTPService>
	
	<mx:StringValidator 
        id="nameValidator"
        source="{searchAllergyTI}" 
        property="text"
        minLength="2"
    />
	
	<mx:VBox verticalAlign="middle" horizontalAlign="center" width="100%" height="85%">
		<mx:Form defaultButton="{OKBtn}" labelWidth="140">
			<mx:Label text="{patient['last_name']}, {patient['first_name']}" fontWeight="bold" />
			<mx:Spacer height="5" />
			<mx:FormItem required="true" label="{languageArray['Allergy Name']}">
				<hc:AdvancedAutoComplete id="searchAllergyTI" dataProvider="{allergies}" 
					labelField="name" selectedItemStyleName="facebook" matchType="anyPart" 
					showBrowseButton="true" browserFields="name" enableClearIcon="true" width="275" 
					allowNewValues="true" backspaceAction="remove" autoSelectEnabled="false"
					change="validateForm(event);"/>	
			</mx:FormItem>
			<mx:Spacer height="5" />
			<mx:FormItem label="{languageArray['Date Observed']}">
				<mx:DateField id="allergyDateDF" yearNavigationEnabled="true" minYear="1980"
					creationComplete="allergyDateDF.selectedDate = new Date();" />
			</mx:FormItem>
			<mx:Spacer height="5" />
			<mx:FormItem label="{languageArray['Severity']}">		
				<mx:ComboBox id="severityCB" dataProvider="{severities}" /> 
			</mx:FormItem>
			<mx:Spacer height="5" />
			<mx:FormItem label="{languageArray['Reaction']}">
				<mx:TextInput id="allergyReactionTI" />
			</mx:FormItem>
			<mx:Spacer height="5" />
			<mx:FormItem label="{languageArray['Notes']}">
				<mx:TextArea id="allergyNotesTI" width="200" height="100" />
			</mx:FormItem>
		</mx:Form>
	</mx:VBox>
	
	
	<mx:HBox horizontalAlign="center" verticalAlign="middle" width="100%" height="15%">
		<mx:Button label="OK" id="OKBtn" click="processPatientAllergyCreate()" />
		<mx:Button label="{languageArray['Cancel']}" id="CancelBtn" click="PopUpManager.removePopUp(this)" />
	</mx:HBox>
	
</mx:TitleWindow>
