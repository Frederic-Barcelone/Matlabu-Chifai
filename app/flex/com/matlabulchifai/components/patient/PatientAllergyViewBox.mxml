<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="100%" 
	height="100%"
	label="{languageArray['Allergies']}" 
	show="listPatientAllergies()">
	   			
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			import mx.events.ListEvent;
			import mx.core.Application;
			import com.matlabulchifai.events.patient.NoteEvent;
			import mx.managers.PopUpManager;
			
			import com.matlabulchifai.components.popups.PatientAllergyCreateTitleWin;
			import com.matlabulchifai.components.popups.PatientAllergyUpdateTitleWin;
			import com.matlabulchifai.events.patient.PatientAllergyEvent;
			import com.matlabulchifai.events.allergy.AllergyEvent;
			
			private var authToken:String = "?authenticity_token=" + Application.application.parameters.authenticityToken;
			private var allergyPopUp:PatientAllergyCreateTitleWin;
			private var allergyUpdatePopUp:PatientAllergyUpdateTitleWin;
			
			[Bindable]
			public var languageArray:Object = Application.application.languageArray;
			[Bindable]
			public var patientID:Number;
			[Bindable]
			public var allergies:ArrayCollection;
			[Bindable]        
			public var allergyIdMap:Object;
			
			[Bindable]
			public var patient:XML;
			
			
			public function listPatientAllergies():void {
				allergiesXLC.removeAll();
				var rnd:int = Math.round(Math.random()*10000);
				svcAllergiesList.url="/patients/" + patientID + "/patient_allergies.xml?rnd=" + rnd;
				svcAllergiesList.send();
			}
			
			private function handleAllergiesListResult(event:ResultEvent):void {
				var resultXML:XML = XML(event.result);
				Matlabulchifai.debug("patient_allergies = \n" + resultXML);
				this.enabled = true;
			}
			
			private function showAllergyCreateTitleWin():void{
				allergyPopUp = PatientAllergyCreateTitleWin(PopUpManager.createPopUp(this, PatientAllergyCreateTitleWin, true));
				allergyPopUp.patient = this.patient;
				allergyPopUp.patientID = this.patientID;
				allergyPopUp.languageArray = this.languageArray;
				allergyPopUp.allergies = allergies;
				PopUpManager.centerPopUp(allergyPopUp);
				allergyPopUp.addEventListener(PatientAllergyEvent.PATIENT_ALLERGY_CREATE, handlePatientAllergyEvent);
				allergyPopUp.addEventListener(AllergyEvent.ALLERGY_CREATE, handleAllergyCreateEvent);
			}
	
			public function handlePatientAllergyEvent(event:Event):void {
				listPatientAllergies();
				removePatientAllergyEventListener();
			}
			
			public function removePatientAllergyEventListener():void {
				if (allergyPopUp.hasEventListener(PatientAllergyEvent.PATIENT_ALLERGY_CREATE)) {
					allergyPopUp.removeEventListener(PatientAllergyEvent.PATIENT_ALLERGY_CREATE, handlePatientAllergyEvent);
				}
			}
			
			public function deleteAllergy(allergy:XML):void {
				this.enabled = false;
				svcAllergiesDestroy.url = "/patient_allergies/" + allergy.id + ".xml" + authToken;
				svcAllergiesDestroy.send({_method:"DELETE"});
		    }
		    
		    private function handleAllergiesDestroyResult(event:ResultEvent):void {
		    	listPatientAllergies();
		    }
			
			private function handleAllergyClick(event:ListEvent):void {
				if (event.columnIndex != event.currentTarget.columns.length-1){
					var allergy:XML = XML(event.currentTarget.selectedItem)
					showAllergyUpdateTitleWin(allergy);
				}
			}
			
			private function showAllergyUpdateTitleWin(allergy:XML):void {				
				allergyUpdatePopUp = PatientAllergyUpdateTitleWin(PopUpManager.createPopUp(this, PatientAllergyUpdateTitleWin, true));
				allergyUpdatePopUp.patient = patient;
				allergyUpdatePopUp.allergy = allergy;
				allergyUpdatePopUp.allergies = allergies;				
				allergyUpdatePopUp.languageArray = languageArray;
				PopUpManager.centerPopUp(allergyUpdatePopUp);
				allergyUpdatePopUp.addEventListener(PatientAllergyEvent.PATIENT_ALLERGY_UPDATE, handlePatientAllergyUpdateEvent);
				allergyUpdatePopUp.addEventListener(AllergyEvent.ALLERGY_CREATE, handleAllergyCreateEvent);
				
			}
			
			public function handlePatientAllergyUpdateEvent(event:PatientAllergyEvent):void {			
				listPatientAllergies();
				removeAllergyUpdateEventListener();			
			}
			
			public function handleAllergyCreateEvent(event:AllergyEvent):void {			
				dispatchEvent(new AllergyEvent(AllergyEvent.ALLERGY_CREATE, null));			
				var popUp:Object = (allergyPopUp || allergyUpdatePopUp);
				if (popUp.hasEventListener(AllergyEvent.ALLERGY_CREATE)) {					
							popUp.removeEventListener(AllergyEvent.ALLERGY_CREATE, handleAllergyCreateEvent);				
						}
			}
			
			public function removeAllergyUpdateEventListener():void {				
				if (allergyUpdatePopUp.hasEventListener(PatientAllergyEvent.PATIENT_ALLERGY_UPDATE)) {					
					allergyUpdatePopUp.removeEventListener(PatientAllergyEvent.PATIENT_ALLERGY_UPDATE, handlePatientAllergyUpdateEvent);				
				}			
			}			
			
			private function getAllergyName(item:Object, column:DataGridColumn):String {
				var allergy:XML = allergyIdMap[item.allergy_id];
				return allergy.name;
			}
		]]>
	</mx:Script>	
	
	<mx:XMLListCollection id="allergiesXLC"
        source="{XMLList(svcAllergiesList.lastResult.children())}"/>
	
	<mx:HTTPService
        id="svcAllergiesList"
        resultFormat="e4x"
        result="handleAllergiesListResult(event)"/>
                  
    <mx:HTTPService
        id="svcAllergiesDestroy"
        resultFormat="e4x"
        method="POST"
        result="handleAllergiesDestroyResult(event)"/>
	
   	<mx:Panel title="{languageArray['Allergy List']}" width="100%" height="100%" 
   		paddingTop="5" paddingLeft="5" paddingRight="5">
   		<mx:LinkButton label="{languageArray['Add New Allergy']}" color="#0000FF" 
   			click="showAllergyCreateTitleWin()"/>
   		<mx:DataGrid id="allergiesGrid" width="100%" height="100%" textAlign="center" 
   			dataProvider="{allergiesXLC}" wordWrap="true" variableRowHeight="true"
   			itemClick="handleAllergyClick(event)">						
   			<mx:columns>														
   				<mx:DataGridColumn headerText="{languageArray['Allergy Name']}" width="250"
	                labelFunction="getAllergyName"/>
	            <mx:DataGridColumn headerText="{languageArray['Date Observed']}" width="125"
	                dataField="date_observed"/>	
				<mx:DataGridColumn headerText="{languageArray['Severity']}" width="85"
	                dataField="severity"/>
	            <mx:DataGridColumn headerText="{languageArray['Reaction']}" width="85"
	                dataField="reaction"/>
	            <mx:DataGridColumn headerText="{languageArray['Notes']}"
	                dataField="notes"/>	
	            <mx:DataGridColumn headerText="" width="150" 
	                    editable="false">
	                    <mx:itemRenderer>
	                        <mx:Component>
	                            <mx:Button label="{outerDocument.languageArray['Delete Allergy']}" click="outerDocument.deleteAllergy(XML(data))" />
	                        </mx:Component>
	                    </mx:itemRenderer>
				</mx:DataGridColumn>						
   			</mx:columns>					
   		</mx:DataGrid>
   	</mx:Panel>
	
</mx:VBox>
