<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="100%" 
	height="100%"
    label="{languageArray['Account Management']}"
    creationComplete="init()">
	
	<mx:Script>
		<![CDATA[
			import com.matlabulchifai.events.admin.AccountCreateEvent;
			import mx.rpc.events.ResultEvent;
			import mx.controls.Alert;
			import mx.collections.XMLListCollection;
			import mx.core.Application;
			import com.matlabulchifai.components.popups.AccountCreateTitleWin;
			import mx.managers.PopUpManager;
			import com.matlabulchifai.events.admin.AccountCreateEvent;
			
			[Bindable]
			public var languageArray:Object;
			
			private var authToken:String = "?authenticity_token=" + Application.application.parameters.authenticityToken;
			
			private var accountPopUp:AccountCreateTitleWin;
			
			private function init():void{
				listUsers();
			}
			
			public function listUsers():void{
				var rnd:int = Math.round(Math.random()*10000);
				svcUsersList.url = "/users.xml?rnd=" + rnd;
				
				try{
					svcUsersList.send();
				}
				catch (error:Error){
					Alert.show(languageArray["Could not retrieve user list."], languageArray["Server Error"]);
				}
			}
			
			private function handleUsersListResult(event:ResultEvent):void{
				
			}
			
			public function deleteUser(user:XML):void {
				if(user.is_admin == 1){
					Alert.show(languageArray["Cannot delete admin account."], languageArray["Error"])
				}
				else if(user.login == 'tester'){
					//TODO: remove this after testing
					Alert.show("Cannot delete tester account.", languageArray["Error"])
				}
				else{
					svcUsersDestroy.url = "/users/" + user.id + ".xml" + authToken;
					
					try{
						svcUsersDestroy.send({_method:"DELETE"});
					}
					catch (error:Error){
						Alert.show(languageArray["Could not delete user."], languageArray["Server Error"]);
					}
				}
    		}
    		
    		private function handleUsersDestroyResult(event:ResultEvent):void{
    			listUsers();
    		}
    		
    		private function showUserCreateBox():void{
    			accountPopUp = 
					AccountCreateTitleWin(PopUpManager.createPopUp(this, AccountCreateTitleWin, true));		
				accountPopUp.languageArray = languageArray;
				PopUpManager.centerPopUp(accountPopUp);
				
				accountPopUp.addEventListener(AccountCreateEvent.ACCOUNT_CREATE, handleAccountCreateEvent);
    		}
    		
    		private function handleAccountCreateEvent(evt:AccountCreateEvent):void{
    			listUsers();
    			
    			if (accountPopUp.hasEventListener(AccountCreateEvent.ACCOUNT_CREATE)) {
					accountPopUp.removeEventListener(AccountCreateEvent.ACCOUNT_CREATE, handleAccountCreateEvent);
				}
    		}
    		
		]]>
	</mx:Script>
	
	<mx:HTTPService
        id="svcUsersList"
        resultFormat="e4x"
        result="handleUsersListResult(event)"/>
        
    <mx:XMLListCollection id="usersXLC"
        source="{XMLList(svcUsersList.lastResult.children())}"/>
        
    <mx:HTTPService
        id="svcUsersDestroy"
        resultFormat="e4x"
        method="POST"
        result="handleUsersDestroyResult(event)"/>
	
		<mx:LinkButton label="{languageArray['Create Account']}" color="#0000FF" click="showUserCreateBox()"/>
		
		<mx:DataGrid id="usersGrid" width="100%" height="100%" wordWrap="true" textAlign="center"
			variableRowHeight="true" dataProvider="{usersXLC}">
	        <mx:columns>
				<mx:DataGridColumn headerText="{languageArray['Login']}" width="115"
					dataField="login"/>
				<mx:DataGridColumn headerText="{languageArray['First Name']}" width="150"
					dataField="first_name" />
				<mx:DataGridColumn headerText="{languageArray['Last Name']}" width="90"
					dataField="last_name"/>
				<mx:DataGridColumn headerText="{languageArray['Created On']}" width="90"
					dataField="created_at"/>
				<mx:DataGridColumn headerText="" width="70" 
	                    editable="false">
	                    <mx:itemRenderer>
	                        <mx:Component>
	                            <mx:Button label="{outerDocument.languageArray['Delete User']}" click="outerDocument.deleteUser(XML(data))" />
	                        </mx:Component>
	                    </mx:itemRenderer>
				</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid>
	
</mx:VBox>
