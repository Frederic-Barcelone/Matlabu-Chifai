<?xml version="1.0" encoding="utf-8"?>
<mx:HBox 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="100%" 
	height="100%"
    label="PatientInfo"
	show="init()">

	<mx:Metadata>
		[Event(name="conditionCreate", type="com.matlabulchifai.events.patient.ConditionEvent")]
		[Event(name="visitTypeCreate", type="com.matlabulchifai.events.patient.VisitTypeEvent")]
		[Event(name="allergyCreate", type="com.matlabulchifai.events.patient.AllergyEvent")]
		[Event(name="vaccinationCreate", type="com.matlabulchifai.events.patient.VaccinationEvent")]
		[Event(name="prescriptionCreate", type="com.matlabulchifai.events.patient.PrescriptionEvent")]
	</mx:Metadata>
		
	<mx:Script>
	<![CDATA[
		import com.matlabulchifai.components.popups.AlertCreateTitleWin;
		import flash.events.Event;
		import mx.core.IFlexDisplayObject;
		import mx.rpc.events.ResultEvent;
		import mx.collections.XMLListCollection;
		import mx.managers.PopUpManager;
		import com.matlabulchifai.components.popups.PatientUpdateTitleWin;
		import com.matlabulchifai.components.popups.VaccCreateTitleWin;
		import com.matlabulchifai.components.popups.AllergyCreateTitleWin;
		import com.matlabulchifai.components.popups.NoteCreateTitleWin;
		import com.matlabulchifai.components.popups.VisitCreateTitleWin;
		import com.matlabulchifai.components.popups.PrescriptionCreateTitleWin;
		import com.matlabulchifai.events.patient.PatientEvent;
		import com.matlabulchifai.events.patient.VaccinationEvent;
		import com.matlabulchifai.events.patient.AllergyEvent;
		import com.matlabulchifai.events.patient.VisitEvent;
		import com.matlabulchifai.events.patient.NoteEvent;
		import com.matlabulchifai.events.patient.PrescriptionEvent;
		import com.matlabulchifai.events.patient.AlertEvent;
		import com.matlabulchifai.events.patient.ConditionEvent;
		import com.matlabulchifai.events.patient.VisitTypeEvent;
		import com.matlabulchifai.events.patient.PatientAllergyEvent;
		import com.matlabulchifai.events.patient.PatientVaccinationEvent;
		import com.matlabulchifai.events.patient.PatientPrescriptionEvent;

		
		[Bindable]
		public var languageArray:Object;
		[Bindable]        
		public var patientIdMap:Object;
		[Bindable]        
		public var allergyIdMap:Object;
		[Bindable]        
		public var vaccinationIdMap:Object;
		[Bindable]        
		public var conditionIdMap:Object;
		[Bindable]        
		public var medicationIdMap:Object;	
		[Bindable]        
		public var visitTypeIdMap:Object;
		[Bindable]        
		public var doctorIdMap:Object;
		
		[Bindable]
		public var patientID:Number = 0;
		
		[Bindable]
		public var patient:XML;
		
		private var rnd:Number;
		private var patientUpdatePopUp:PatientUpdateTitleWin;
		private var vaccPopUp:VaccCreateTitleWin;
		private var allergyPopUp:AllergyCreateTitleWin;
		private var visitPopUp:VisitCreateTitleWin;
		private var notePopUp:NoteCreateTitleWin;
		private var prescriptionPopUp:PrescriptionCreateTitleWin;
		private var alertPopUp:AlertCreateTitleWin;
		
		public function init():void {
			patientID = patient.id;
			rnd = Math.round(Math.random()*1000);
			listAlerts();
			patientInfoMain.selectedIndex = 0;			
		}
		
		public function listAlerts():void {
			svcAlertsList.url="/patients/" + patientID + "/patient_alerts.xml?";
			svcAlertsList.send();
		}
		
		public function listPrescriptions():void {
			svcPrescriptionsList.url="/patients/" + patientID + "/patient_medications.xml?";
			svcPrescriptionsList.send();
		}
		
		private function handlePrescriptionsListResult(event:ResultEvent):void {
			var resultXML:XML = XML(event.result);
			Matlabulchifai.debug("prescriptions_notes = \n" + resultXML);
		}
		
		public function listNotes():void {
			svcNotesList.url="/patients/" + patientID + "/patient_notes.xml?";
			svcNotesList.send();
		}
		
		private function handleNotesListResult(event:ResultEvent):void {
			var resultXML:XML = XML(event.result);
			Matlabulchifai.debug("patient_notes = \n" + resultXML);
		}
		
		
		public function listVaccinations():void {
			svcVaccinationsList.url="/patients/" + patientID + "/patient_vaccinations.xml";
			svcVaccinationsList.send();
		}
		
		private function handleVaccinationsListResult(event:ResultEvent):void {
			var resultXML:XML = XML(event.result);
			Matlabulchifai.debug("patient_vaccinations = \n" + resultXML);
		}
		
		public function listAllergies():void {
			svcAllergiesList.url="/patients/" + patientID + "/patient_allergies.xml";
			svcAllergiesList.send();
		}
		
		private function handleAllergiesListResult(event:ResultEvent):void {
			var resultXML:XML = XML(event.result);
			Matlabulchifai.debug("patient_allergies = \n" + resultXML);
		}
		
		public function listVisits():void {
			svcVisitsList.url="/patients/" + patientID + "/patient_visits.xml?";
			svcVisitsList.send();
		}
		
		private function handleVisitsListResult(event:ResultEvent):void {
			var resultXML:XML = XML(event.result);
			Matlabulchifai.debug("visit_allergies = \n" + resultXML);
		}
		
		private function getDoctorName(item:Object, column:DataGridColumn):String {
			var doctor:XML = doctorIdMap[item.doctor_id];
			return doctor.first_name + " " + doctor.middle_name + " " + doctor.last_name;
		}
		
		private function getAllergyName(item:Object, column:DataGridColumn):String {
			var allergy:XML = allergyIdMap[item.allergy_id];
			return allergy.name;
		}
		
		private function getVaccinationName(item:Object, column:DataGridColumn):String {
			var vaccination:XML = vaccinationIdMap[item.vaccination_id];
			return vaccination.name;
		}
		
		private function getConditionName(item:Object, column:DataGridColumn):String {
			var condition:XML = conditionIdMap[item.condition_id];
			return condition.name;
		}
		
		private function getMedicationName(item:Object, column:DataGridColumn):String {
			var medication:XML = medicationIdMap[item.medication_id];
			return medication.name;
		}
		
		//need to loop for now because db (not optimized) is slow in responding
		//does not respond fast enough to update the visitTypeIdMap
		private function getVisitType(item:Object, column:DataGridColumn):String {
			var visitType:XML;
			while (visitTypeIdMap[item.visit_type_id] == null) {}
			visitType = visitTypeIdMap[item.visit_type_id];
			return visitType.name;
		}
		
		private function showPatientUpdateTitleWin():void {
			patientUpdatePopUp = PatientUpdateTitleWin(PopUpManager.createPopUp(this, PatientUpdateTitleWin, true));
			patientUpdatePopUp.addEventListener(PatientEvent.PATIENT_UPDATE, handlePatientUpdateEvent);
			patientUpdatePopUp.patient = this.patient;
			patientUpdatePopUp.languageArray = this.languageArray;
			PopUpManager.centerPopUp(patientUpdatePopUp);
		}
		
		public function handlePatientUpdateEvent(event:PatientEvent):void {
			patient = event.patient;			
			patientIdMap[patient.id] = patient;
			removePatientUpdateEventListener();
		}
		
		public function removePatientUpdateEventListener():void {
			if (patientUpdatePopUp.hasEventListener(PatientEvent.PATIENT_UPDATE)) {
				patientUpdatePopUp.removeEventListener(PatientEvent.PATIENT_UPDATE, handlePatientUpdateEvent);
			}
		}
		
		private function showVaccCreateTitleWin():void {
			vaccPopUp = VaccCreateTitleWin(PopUpManager.createPopUp(this, VaccCreateTitleWin, true));
			vaccPopUp.addEventListener(PatientVaccinationEvent.PATIENT_VACCINATION_CREATE, handlePatientVaccEvent);
			vaccPopUp.patient = this.patient;
			vaccPopUp.languageArray = this.languageArray;
			vaccPopUp.patientID = this.patientID;
			vaccPopUp.vaccinationIdMap = this.vaccinationIdMap;
			PopUpManager.centerPopUp(vaccPopUp);
		}
		
		//upon receiving a fresh patient vaccination:
		//update the vaccinations id map via dispatching a new VaccinationEvent
		//make sure that the event is dispatched before calling listVaccinations()	
		public function handlePatientVaccEvent(event:Event):void {
			var resultXML:XML;
			dispatchEvent(new VaccinationEvent(VaccinationEvent.VACCINATION_CREATE, resultXML));
			listVaccinations();
			removePatientVaccEventListener();
		}
		
		public function removePatientVaccEventListener():void {
			if (vaccPopUp.hasEventListener(PatientVaccinationEvent.PATIENT_VACCINATION_CREATE)) {
				vaccPopUp.removeEventListener(PatientVaccinationEvent.PATIENT_VACCINATION_CREATE, handlePatientVaccEvent);
			}
		}
		
		private function showAllergyCreateTitleWin():void{
			allergyPopUp = AllergyCreateTitleWin(PopUpManager.createPopUp(this, AllergyCreateTitleWin, true));
			allergyPopUp.addEventListener(PatientAllergyEvent.PATIENT_ALLERGY_CREATE, handlePatientAllergyEvent);
			allergyPopUp.patient = this.patient;
			allergyPopUp.patientID = this.patientID;
			allergyPopUp.languageArray = this.languageArray;
			allergyPopUp.allergyIdMap = this.allergyIdMap;
			PopUpManager.centerPopUp(allergyPopUp);
		}

		//upon receiving a fresh patient allergy:
		//update the allergies id map via dispatching a new AllergyEvent
		//make sure that the event is dispatched before calling listAllergies()	
		public function handlePatientAllergyEvent(event:Event):void {
			var resultXML:XML;
			dispatchEvent(new AllergyEvent(AllergyEvent.ALLERGY_CREATE, resultXML));
			listAllergies();
			removePatientAllergyEventListener();
		}
		
		public function removePatientAllergyEventListener():void {
			if (allergyPopUp.hasEventListener(PatientAllergyEvent.PATIENT_ALLERGY_CREATE)) {
				allergyPopUp.removeEventListener(PatientAllergyEvent.PATIENT_ALLERGY_CREATE, handlePatientAllergyEvent);
			}
		}
		
		private function showVisitCreateTitleWin():void {
			visitPopUp = VisitCreateTitleWin(PopUpManager.createPopUp(this, VisitCreateTitleWin, true));
			visitPopUp.addEventListener(VisitEvent.VISIT_CREATE, handleVisitEvent);
			visitPopUp.patient = this.patient;
			visitPopUp.patientID = this.patientID;
			visitPopUp.visitTypeIdMap = this.visitTypeIdMap;
			visitPopUp.conditionIdMap = this.conditionIdMap;
			visitPopUp.doctorIdMap = this.doctorIdMap;
			visitPopUp.languageArray = this.languageArray;
			PopUpManager.centerPopUp(visitPopUp);
		}
		
		//upon receiving a fresh patient visit:
		//update the conditions id map via dispatching a new ConditionEvent
		//update the visit type id map via dispatching a new VisitTypeEvent
		//make sure events are dispatched before calling listVisits()
		public function handleVisitEvent(event:Event):void {
			var resultXML:XML;
			dispatchEvent(new ConditionEvent(ConditionEvent.CONDITION_CREATE, resultXML));
			dispatchEvent(new VisitTypeEvent(VisitTypeEvent.VISIT_TYPE_CREATE, resultXML));
			listVisits();
			removeVisitEventListener();
		}
		
		public function removeVisitEventListener():void {
			if (visitPopUp.hasEventListener(VisitEvent.VISIT_CREATE)) {
				visitPopUp.removeEventListener(VisitEvent.VISIT_CREATE, handleVisitEvent);
			}
		}
		
		private function showNoteCreateTitleWin():void {				
			notePopUp = NoteCreateTitleWin(PopUpManager.createPopUp(this, NoteCreateTitleWin, true));
			notePopUp.addEventListener(NoteEvent.NOTE_CREATE, handleNoteEvent);
			notePopUp.patient = this.patient;
			notePopUp.patientID = this.patientID;
			notePopUp.languageArray = this.languageArray;
			PopUpManager.centerPopUp(notePopUp);
		}
		
		public function handleNoteEvent(event:Event):void {
			listNotes();				
			removeNoteEventListener();			
		}						
		
		public function removeNoteEventListener():void {				
			if (notePopUp.hasEventListener(NoteEvent.NOTE_CREATE)) {					
				notePopUp.removeEventListener(NoteEvent.NOTE_CREATE, handleNoteEvent);				
			}			
		}						
		
		private function showPrescriptionCreateTitleWin():void {				    			
			prescriptionPopUp = PrescriptionCreateTitleWin(PopUpManager.createPopUp(this, PrescriptionCreateTitleWin, true));    			
			prescriptionPopUp.addEventListener(PatientPrescriptionEvent.PATIENT_PRESCRIPTION_CREATE, handlePatientPrescriptionEvent);
			prescriptionPopUp.patient = this.patient;				
			prescriptionPopUp.patientID = this.patientID;  
			prescriptionPopUp.medicationIdMap = this.medicationIdMap;
			prescriptionPopUp.doctorIdMap = this.doctorIdMap;
			prescriptionPopUp.conditionIdMap = this.conditionIdMap;
			prescriptionPopUp.languageArray = this.languageArray;
			PopUpManager.centerPopUp(prescriptionPopUp);    		
		}						
		
		//upon receiving a fresh patient prescription:
		//update the conditions id map via dispatching a new ConditionEvent
		//update the medication id map via dispatching a new PrescriptionEvent
		//make sure events are dispatched before calling listPrescriptions()
		public function handlePatientPrescriptionEvent(event:Event):void {
			var resultXML:XML;
			dispatchEvent(new ConditionEvent(ConditionEvent.CONDITION_CREATE, resultXML));
			dispatchEvent(new PrescriptionEvent(PrescriptionEvent.PRESCRIPTION_CREATE, resultXML));
			listPrescriptions();				
			removePatientPrescriptionEventListener();			
		}						
		
		public function removePatientPrescriptionEventListener():void {				
			if (prescriptionPopUp.hasEventListener(PatientPrescriptionEvent.PATIENT_PRESCRIPTION_CREATE)) {					
				prescriptionPopUp.removeEventListener(PatientPrescriptionEvent.PATIENT_PRESCRIPTION_CREATE, handlePatientPrescriptionEvent);				
			}			
		}	
		
		private function showAlertCreateTitleWin():void {				
			alertPopUp = AlertCreateTitleWin(PopUpManager.createPopUp(this, AlertCreateTitleWin, true));
			alertPopUp.patient = this.patient;
			alertPopUp.patientID = this.patientID;
			alertPopUp.languageArray = languageArray;
			PopUpManager.centerPopUp(alertPopUp);
			alertPopUp.addEventListener(AlertEvent.ALERT_CREATE, handleAlertEvent);
		}
		
		public function handleAlertEvent(event:Event):void {
			dispatchEvent(new AlertEvent(AlertEvent.ALERT_CREATE, null));
			listAlerts();				
			removeAlertEventListener();			
		}						
		
		public function removeAlertEventListener():void {				
			if (alertPopUp.hasEventListener(AlertEvent.ALERT_CREATE)) {					
				alertPopUp.removeEventListener(AlertEvent.ALERT_CREATE, handleNoteEvent);				
			}			
		}								    	
	]]>
	</mx:Script>
	
	<mx:HTTPService
        id="svcVaccinationsList"
        resultFormat="e4x"
        result="handleVaccinationsListResult(event)"/>
	<mx:XMLListCollection id="vaccinationsXLC"
        source="{XMLList(svcVaccinationsList.lastResult.children())}"/>
	
	<mx:HTTPService
        id="svcAllergiesList"
        resultFormat="e4x"
        result="handleAllergiesListResult(event)"/>
	<mx:XMLListCollection id="allergiesXLC"
        source="{XMLList(svcAllergiesList.lastResult.children())}"/>

	<mx:HTTPService
        id="svcVisitsList"
        resultFormat="e4x"
        result="handleVisitsListResult(event)"/>
	<mx:XMLListCollection id="visitsXLC"
        source="{XMLList(svcVisitsList.lastResult.children())}"/>
		
	<mx:HTTPService
        id="svcNotesList"
        resultFormat="e4x"
        result="handleNotesListResult(event)"/>
	<mx:XMLListCollection id="notesXLC"
        source="{XMLList(svcNotesList.lastResult.children())}"/>
		
	<mx:HTTPService
        id="svcPrescriptionsList"
        resultFormat="e4x"
        result="handlePrescriptionsListResult(event)"/>
	<mx:XMLListCollection id="prescriptionsXLC"
        source="{XMLList(svcPrescriptionsList.lastResult.children())}"/>
    
    <mx:HTTPService
        id="svcAlertsList"
        resultFormat="e4x"
        result=""/>
	<mx:XMLListCollection id="alertsXLC"
        source="{XMLList(svcAlertsList.lastResult.children())}"/>
		
	<mx:VBox label="Main" height="100%" width="20%">
		<mx:Label text="{patient['first_name']} {patient['last_name']}" fontSize="36" color="#171712"/>
		<mx:Image source="http://parentalwisdom.files.wordpress.com/2007/08/einstein.png"/>			
	</mx:VBox>
   	<mx:VBox height="100%" width="80%" verticalGap="0">
   		<mx:TabBar dataProvider="{patientInfoMain}" 
   			fontWeight="Bold" paddingTop="0" paddingBottom="0" />			
   		<mx:ViewStack 
   			id="patientInfoMain" 
   			width="100%" 
   			height="100%">
	   		<mx:VBox label="{languageArray['Alerts']}" show="listAlerts()">
	   			<mx:Panel title="{languageArray['Alert List']}" width="100%" height="100%" 
	   				paddingTop="5" paddingLeft="5" paddingRight="5">
		   			<mx:LinkButton label="{languageArray['Add New Alert']}" color="#0000FF" 
		   				click="showAlertCreateTitleWin()"/>
		   			<mx:DataGrid id="alertsGrid" width="100%" height="100%" textAlign="center" 
		   				dataProvider="{alertsXLC}" wordWrap="true" variableRowHeight="true">						
		   				<mx:columns>														
		   					<mx:DataGridColumn headerText="{languageArray['Alert Date']}" 
		   						dataField="alert_date" width="90"/>							
		   					<mx:DataGridColumn headerText="{languageArray['Alert Note']}" 
		   						dataField="notes"/>						
		   				</mx:columns>					
		   			</mx:DataGrid>
	   			</mx:Panel>
	   		</mx:VBox>
	   		<mx:VBox label="{languageArray['General Information']}" show="">
	   			<mx:Panel title="{languageArray['General Information']}" width="100%" height="100%" 
	   				paddingTop="10" paddingLeft="5" paddingRight="5">	
	   				<mx:LinkButton label="{languageArray['Edit Patient Information']}" color="#0000FF" 
		   				click="showPatientUpdateTitleWin()"/>								
					<mx:HBox>
						<mx:Label text="{languageArray['Medical Record ID']}:" fontSize="12" fontWeight="bold"/>
						<mx:Label text="{patient['medical_record_number']}" fontSize="12"/>				
					</mx:HBox>
					<mx:HBox>
						<mx:Label text="{languageArray['Patient Name']}:" fontSize="12" fontWeight="bold"/>
						<mx:Label text="{patient['first_name'] + ' ' + patient['middle_name'] + ' ' + patient['last_name']}" fontSize="12"/>
					</mx:HBox>
					<mx:HBox>
						<mx:Label text="{languageArray['Arrival Date']}:" fontSize="12" fontWeight="bold"/>
						<mx:Label text="{patient['arrival_date']}" fontSize="12"/>
					</mx:HBox>
					<mx:HBox>
						<mx:Label text="{languageArray['Date of Birth']}:" fontSize="12" fontWeight="bold"/>
						<mx:Label text="{patient['date_of_birth']}" fontSize="12"/>
					</mx:HBox>
					<mx:HBox>
						<mx:Label text="{languageArray['Gender']}:" fontSize="12" fontWeight="bold"/>
						<mx:Label text="{patient['gender']}" fontSize="12"/>
					</mx:HBox>
					<mx:Spacer height="20" />
					<mx:HBox>
						<mx:Label text="{languageArray['Address']}:" fontSize="12" fontWeight="bold"/>
						<mx:Label text="{patient['address'] + ' ' + patient['city'] + ' ' + patient['state'] + ' ' + patient['zip']}" fontSize="12"/>
					</mx:HBox>
					<mx:HBox>
						<mx:Label text="{languageArray['Telephone']}:" fontSize="12" fontWeight="bold"/>
						<mx:Label text="{patient['telephone']}" fontSize="12"/>
					</mx:HBox>
					<mx:HBox>
						<mx:Label text="{languageArray['Father Name']}:" fontSize="12" fontWeight="bold"/>
						<mx:Label text="{patient['father_first_name'] + ' ' + patient['father_last_name']}" fontSize="12"/>
					</mx:HBox>
					<mx:HBox>
						<mx:Label text="{languageArray['Mother Name']}:" fontSize="12" fontWeight="bold"/>
						<mx:Label text="{patient['mother_first_name'] + ' ' + patient['mother_last_name']}" fontSize="12"/>
					</mx:HBox>
					<mx:Spacer height="20" />
					<mx:HBox>
						<mx:Label text="{languageArray['Emergency Contact Name']}:" fontSize="12" fontWeight="bold"/>
						<mx:Label text="{patient['emergency_contact_name']}" fontSize="12"/>
					</mx:HBox>
					<mx:HBox>
						<mx:Label text="{languageArray['Emergency Contact Relationship']}:" fontSize="12" fontWeight="bold"/>
						<mx:Label text="{patient['emergency_contact_relationship']}" fontSize="12"/>
					</mx:HBox>
					<mx:HBox>
						<mx:Label text="{languageArray['Emergency Contact Number']}:" fontSize="12" fontWeight="bold"/>
						<mx:Label text="{patient['emergency_contact_number']}" fontSize="12"/>
					</mx:HBox>
					<mx:Spacer height="20" />
					<mx:HBox>
						<mx:Label text="{languageArray['Notes']}:" fontSize="12" fontWeight="bold"/>
						<mx:Label text="{patient['notes']}" fontSize="12"/>
					</mx:HBox>
	   			</mx:Panel>
	   		</mx:VBox>
	   		<mx:VBox label="{languageArray['Notes']}" show="listNotes()">
	   			<mx:Panel title="{languageArray['Note List']}" width="100%" height="100%" 
	   				paddingTop="5" paddingLeft="5" paddingRight="5">
		   			<mx:LinkButton label="{languageArray['Add New Note']}" color="#0000FF" 
		   				click="showNoteCreateTitleWin()"/>
		   			<mx:DataGrid id="notesGrid" width="100%" height="100%" textAlign="center" 
		   				dataProvider="{notesXLC}" wordWrap="true" variableRowHeight="true">						
		   				<mx:columns>
		   					<mx:DataGridColumn headerText="{languageArray['Note Date']}" 
		   						dataField="note_date" width="90"/>							
		   					<mx:DataGridColumn headerText="{languageArray['Note']}" 
		   						dataField="body"/>						
		   				</mx:columns>					
		   			</mx:DataGrid>
	   			</mx:Panel>
	   		</mx:VBox>
	   		<mx:VBox label="{languageArray['Allergies']}" show="listAllergies()">
	   			<mx:Panel title="{languageArray['Allergy List']}" width="100%" height="100%" 
	   				paddingTop="5" paddingLeft="5" paddingRight="5">
		   			<mx:LinkButton label="{languageArray['Add New Allergy']}" color="#0000FF" 
		   				click="showAllergyCreateTitleWin()"/>
		   			<mx:DataGrid id="allergiesGrid" width="100%" height="100%" textAlign="center" 
		   				dataProvider="{allergiesXLC}" wordWrap="true" variableRowHeight="true">						
		   				<mx:columns>														
		   					<mx:DataGridColumn headerText="{languageArray['Allergy Name']}" width="250"
				                labelFunction="getAllergyName"/>
				            <mx:DataGridColumn headerText="{languageArray['Date Observed']}" width="125"
				                dataField="date_observed"/>	
							<mx:DataGridColumn headerText="{languageArray['Severity']}" width="85"
				                dataField="severity"/>
				            <mx:DataGridColumn headerText="{languageArray['Reaction']}" width="85"
				                dataField="reaction"/>
				            <mx:DataGridColumn headerText="{languageArray['Notes']}"
				                dataField="notes"/>						
		   				</mx:columns>					
		   			</mx:DataGrid>
	   			</mx:Panel>
	   		</mx:VBox>
	   		<mx:VBox label="{languageArray['Visits-Conditions']}" show="listVisits()">
	   			<mx:Panel title="{languageArray['Visits List']}" width="100%" height="100%" 
	   				paddingTop="5" paddingLeft="5" paddingRight="5">
		   			<mx:LinkButton label="{languageArray['Add New Visit']}" color="#0000FF" click="showVisitCreateTitleWin()"/>
		   			<mx:DataGrid id="visitsGrid" width="100%" height="100%" textAlign="center" 
		   				dataProvider="{visitsXLC}" wordWrap="true" variableRowHeight="true">						
		   				<mx:columns>
		   					<mx:DataGridColumn headerText="{languageArray['Visit Date']}" width="85"
				                dataField="visit_date"/>														
		   					<mx:DataGridColumn headerText="{languageArray['Condition Name']}" width="250"
				                labelFunction="getConditionName"/>
				            <mx:DataGridColumn id="visit_type_column" headerText="{languageArray['Visit Type']}" width="125"
				                labelFunction="getVisitType" />
							<mx:DataGridColumn headerText="{languageArray['Doctor Name']}" width="125"
				                labelFunction="getDoctorName"/>	
				            <mx:DataGridColumn headerText="{languageArray['Notes']}"
				                dataField="notes"/>					
		   				</mx:columns>					
		   			</mx:DataGrid>
	   			</mx:Panel>
	   		</mx:VBox>
	   		<mx:VBox label="{languageArray['Prescriptions']}" show="listPrescriptions()">
	   			<mx:Panel title="{languageArray['Prescription List']}" width="100%" height="100%" 
	   				paddingTop="5" paddingLeft="5" paddingRight="5">
		   			<mx:LinkButton label="{languageArray['Add New Prescription']}" color="#0000FF" 
		   				click="showPrescriptionCreateTitleWin()"/>
		   			<mx:DataGrid id="prescriptionsGrid" width="100%" height="100%" textAlign="center" 
		   				dataProvider="{prescriptionsXLC}" wordWrap="true" variableRowHeight="true">						
		   				<mx:columns>														
		   					<mx:DataGridColumn headerText="{languageArray['Medicine Name']}" width="150"
			                	labelFunction="getMedicationName"/>
				            <mx:DataGridColumn headerText="{languageArray['Date Given']}" width="85"
				                dataField="date_given"/>
				            <mx:DataGridColumn headerText="{languageArray['Condition Name']}" width="150"
				                labelFunction="getConditionName"/>
				            <mx:DataGridColumn headerText="{languageArray['Doctor Name']}" width="125"
				                labelFunction="getDoctorName"/>
				            <mx:DataGridColumn headerText="{languageArray['Dosage']}" width="125"
				                dataField="dosage"/>
				            <mx:DataGridColumn headerText="{languageArray['Frequency']}" width="125"
				                dataField="frequency"/>		
				            <mx:DataGridColumn headerText="{languageArray['Notes']}"
				                dataField="notes"/>								
		   				</mx:columns>					
		   			</mx:DataGrid>
	   			</mx:Panel>
	   		</mx:VBox>
	   		<mx:VBox label="{languageArray['Vaccinations']}" show="listVaccinations()">
	   			<mx:Panel title="{languageArray['Vaccination List']}" width="100%" height="100%" 
	   				paddingTop="5" paddingLeft="5" paddingRight="5">
		   			<mx:LinkButton label="{languageArray['Add New Vaccination']}" color="#0000FF" 
		   				click="showVaccCreateTitleWin()"/>
		   			<mx:DataGrid id="vaccinationsGrid" width="100%" height="100%" textAlign="center" 
		   				dataProvider="{vaccinationsXLC}" wordWrap="true" variableRowHeight="true">						
		   				<mx:columns>														
				        	<mx:DataGridColumn headerText="{languageArray['Vaccination Name']}" width="250"
				                labelFunction="getVaccinationName"/>
				            <mx:DataGridColumn headerText="{languageArray['Date Administered']}" width="125"
				                dataField="date_admined"/>	
				            <mx:DataGridColumn headerText="{languageArray['Notes']}"
				                dataField="notes"/>
		   				</mx:columns>					
		   			</mx:DataGrid>
	   			</mx:Panel>
	   		</mx:VBox>	   	
   		</mx:ViewStack>		
   	</mx:VBox>		
</mx:HBox>